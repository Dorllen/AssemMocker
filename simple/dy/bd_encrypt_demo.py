from core.sisc_core.mocker_v1 import *
from util.sisc_core.inst_helper import InstHelper as IH


def sub_100369894(x0:Mem, x1:Mem):
    return x0 ^ x1

'''
  * frame #0: 0x0000000102455878 XXXXX`___lldb_unnamed_symbol19941$$XXXXX + 1556
    frame #1: 0x0000000102455dc8 XXXXX`___lldb_unnamed_symbol19945$$XXXXX + 248
    frame #2: 0x0000000102455c34 XXXXX`___lldb_unnamed_symbol19944$$XXXXX + 444
    frame #3: 0x000000010245835c XXXXX`___lldb_unnamed_symbol19955$$XXXXX + 564
    frame #4: 0x0000000102454904 XXXXX`___lldb_unnamed_symbol19938$$XXXXX + 96
'''
def sub_100369264(x0:Mem, x1:Mem, x2:Mem, x25_f_path):
    _x0 = x0
    _x1 = x1
    _x2 = x2

    w8, w9, w10, w11 = Mem.mem_read(x1, 4) # *(x1)

    w8, w9, w10, w11 = IH.rev(w8), IH.rev(w9), IH.rev(w10), IH.rev(w11)

    w12, w13 = Mem.mem_read(x0, 2) # *(x0)

    w27 = w12 ^ w8 # main
    w26 = w13 ^ w9 # main

    w8, w9 = Mem.mem_read(x0 + 0x8, 2)

    w28 = w8 ^ w10 # main
    w24 = w9 ^ w11 # main

    w8 = 0xa # *([X0,#0x1E0])
    w9 = w8 >> 1
    w9 = w9 - 1
    w9 = w9 << 3 # 0x20
    sp_0xa0_0x99 = w9
    w9 = w9 + 0x8 # 存到 *(SP,#0xA0+var_90)
    sp_0xa0_0x90 = w9

    w11 = -4 # 1 - 0xa # -9 # 1 - (w8 >> 1) # 1 - 0xa => 0xfffffffc. 可以理解为-9

    w15 = 1
    w14 = 0x1ce
    x12 = x0 + 0x18 # 表示 x0 + 0x18 地址
    # w24, w26, w27, w28 已知
    # x16内容： lldb_mem_0x10c6d9cb0.txt
    # x25 = 0x..d8f8. 且读这块内存至少是 0x2000
    # "lldb_mem_0x10cf1acc8.txt"
    x25 = Mem.read_file(x25_f_path) #
    while True:
        #loc_100369364
        w8 = w27 >> 0x18
        # lldb_mem_0x10c6d9cb0.txt $x16
        # lldb_mem_0x10cf1acc8.txt $x25
        # todo: 版本核心差异，版本差异
        w6 = x25.w[w8 << 2] # v2版本： (x25 + (w8 << 2)).w；v1版本 w 返回Stack时，使用：x25.w[w8 << 2]
        w8 = IH.ubfx(w26, 16, 8)
        # 0x10cf1b0c8 $x10
        x10 = x25 + 0x400 # 0x..dcf8 都是计算x19后的结果，以x25为基准偏移，+偏移0x400
        w22 = x10.w[w8 << 2]
        w8 = IH.ubfx(w28, 0x8, 0x8)

        x30 = x10 + 0x400 # 0x..e0f8
        w0 = x30.w[w8 << 2]
        w2 = w24 & 0xFF
        x8 = x30 + 0x400 # 0x..e4f8
        w17 = x8.w[w2 << 2]
        w2 = w22 ^ w6
        w0 = w2 ^ w0
        w2 = w26 >> 0x18
        w17 = w0 ^ w17
        w0, w22 = Mem.mem_read(x12 - 8, 2) # *(x12 - 8) # 刚好 0x18 - 0x8 -> 0x10，因为前参数取的是0 ~ 0x10。而在这个循环总共处理x0 + 0x10 ~ 0x10 + 0x30的数据。
        w6 = w17 ^ w0
        w17 = x25.w[w2 << 2]
        w0 = IH.ubfx(w28, 0x10, 8)
        w0 = x10.w[w0 << 2]
        w2 = IH.ubfx(w24, 8, 8)
        w2 = x30.w[w2 << 2]
        w17 = w0 ^ w17
        w17 = w17 ^ w2
        w0 = w27 & 0xFF
        w0 = x8.w[w0 << 2]
        w17 = w17 ^ w0
        w0 = w28 >> 0x18
        w0 = x25.w[w0 << 2]
        w2 = IH.ubfx(w24, 0x10, 8)
        w2 = x10.w[w2 << 2]
        w22 = w17 ^ w22
        w17 = w2 ^ w0
        w0 = IH.ubfx(w27, 8, 8)
        w0 = x30.w[w0 << 2]
        w17 = w17 ^ w0
        w0 = w26 & 0xFF
        w0 = x8.w[w0 << 2]
        w2 = w24 >> 0x18
        w2 = x25.w[w2 << 2]
        w17 = w17 ^ w0
        w0 = IH.ubfx(w27, 0x10, 8)
        w10 = x10.w[w0 << 2]

        w0, w25 = Mem.mem_read(x12, 2)
        w24 = w17 ^ w0
        w10 = w10 ^ w2
        w17 = IH.ubfx(w26, 8, 8)
        w17 = x30.w[w17 << 2]
        w10 = w10 ^ w17
        w17 = w28 & 0xFF
        w17 = x8.w[w17 << 2]
        w10 = w10 ^ w17
        w25 = w10 ^ w25
        w26 = w6 >> 0x18
        if w11 == 0:
            x17 = _x0 # [SP,#0xA0+var_88]. c0 a7 ca 6c 01
            x8 = sp_0xa0_0x99 # [SP,#0xA0+var_98]
            x8 = x17 + (x8 << 2) #

            x11 = x25 + 0x1000 #0x1000 = 0x400 * 4;  Mem.read_file("") # ldp [x10] # ida:0x100369720. x11 = 0x..e8f8
            w13 = x11.w[w26 << 2]
            w14 = IH.ubfx(w22, 0x10, 8)
            x12 = x11 + 0x400
            w14 = x12.w[w14 << 2]
            w15 = IH.ubfx(w24, 8, 8)

            x16 = x12 + 0x400
            w15 = x16.w[w15 << 2]

            w17 = x17.w[sp_0xa0_0x90 << 2]
            w0 = w22 >> 0x18
            w0 = x11.w[w0 << 2]
            w1 = IH.ubfx(w24, 0x10, 8)
            w1 = x12.w[w1 << 2]
            w2 = IH.ubfx(w25, 8, 8)
            w2 = x16.w[w2 << 2]
            w3 = w24 >> 0x18
            w3 = x11.w[w3 << 2]
            w4 = IH.ubfx(w25, 0x10, 8)
            w4 = x12.w[w4 << 2]
            w5 = IH.ubfx(w6, 8, 8)
            w5 = x16.w[w5 << 2]
            w7 = w25 >> 0x18
            w11 = x11.w[w7 << 2]
            w7 = IH.ubfx(w6, 0x10, 8)
            w12 = x12.w[w7 << 2]
            w7 = IH.ubfx(w22, 8, 8)
            w16 = x16.w[w7 << 2]

            x9 = x16 + 0x400
            w10 = w25 & 0xFF
            w10 = x9.w[w10 << 2]
            w6 = w6 & 0xFF
            w6 = x9.w[w6 << 2]
            w7 = w22 & 0xFF
            w7 = x9.w[w7 << 2]
            w19 = w24 & 0xFF
            w9 = x9.w[w19 << 2]
            w13 = w14 ^ w13
            w13 = w13 ^ w15
            w10 = w13 ^ w10

            w13, w14 = Mem.mem_read(x8 + 0x24, 2)# *(x8 + 0x24)
            w8 = Mem.mem_read(x8 + 0x2c)# *(x8 + 0x2c)
            w10 = w10 ^ w17
            w15 = w10 >> 0x18

            x17 = Mem.create(0x10)
            x17[0] = w15
            w15 = w10 >> 0x10
            x17[1] = w15
            w15 = w10 >> 8
            x17[2] = w15

            w15 = w1 ^ w0
            w15 = w15 ^ w2
            w15 = w15 ^ w6
            w13 = w15 ^ w13
            w15 = w4 ^ w3
            w15 = w15 ^ w5
            w15 = w15 ^ w7
            w14 = w15 ^ w14
            x17[3] = w10
            w10 = w13 >> 0x18
            x17[4] = w10
            w10 = w12 ^ w11
            w11 = w13 >> 0x10
            x17[5] = w11
            w11 = w13 >> 8
            x17[6] = w11
            x17[7] = w13
            w11 = w14 >> 0x18
            x17[8] = w11
            w10 = w10 ^ w16
            w11 = w14 >> 0x10
            x17[9] = w11
            w9 = w10 ^ w9
            w10 = w14 >> 8
            x17[0xa] = w10
            x17[0xb] = w14

            w8 = w9 ^ w8
            w9 = w8 >> 0x18
            x17[0xc] = w9
            w9 = w8 >> 0x10
            x17[0xd] = w9
            w9 = w8 >> 8
            x17[0xe] = w9
            x17[0xf] = w8
            return x17

        # lldb_mem_0x10cf1acc8.txt $x25
        # x10 是个固定值
        x17 = x25 # 实际上是一样的
        w2 = x25.w[w26 << 2]
        w26 = IH.ubfx(w22, 0x10, 8)
        x10 = x17 + 0x400
        w0 = x10.w[w26 << 2]
        w26 = IH.ubfx(w24, 8, 8)
        w26 = x30.w[w26 << 2]
        w27 = w25 & 0xFF
        w27 = x8.w[w27 << 2]
        w0 = w0 ^ w2
        w0 = w0 ^ w26
        w0 = w0 ^ w27

        w2, w26 = Mem.mem_read(x12 + 8, 2)
        w27 = w0 ^ w2
        w0 = w22 >> 0x18
        w0 = x17.w[w0 << 2]
        w2 = IH.ubfx(w24, 0x10, 8)
        w2 = x10.w[w2 << 2]
        w0 = w2 ^ w0
        w2 = IH.ubfx(w25, 8, 8)
        w2 = x30.w[w2 << 2]
        w0 = w0 ^ w2
        w2 = w6 & 0xFF
        w2 = x8.w[w2 << 2]
        w0 = w0 ^ w2
        w26 = w0 ^ w26
        w0 = w24 >> 0x18
        w0 = x17.w[w0 << 2]
        w2 = IH.ubfx(w25, 0x10, 8)
        w2 = x10.w[w2 << 2]
        w0 = w2 ^ w0
        w2 = IH.ubfx(w6, 8, 8)
        w2 = x30.w[w2 << 2]
        w0 = w0 ^ w2
        w2 = w22 & 0xFF
        w2 = x8.w[w2 << 2]
        w0 = w0 ^ w2

        w2, w13 = Mem.mem_read(x12 + 0x10, 2)
        w28 = w0 ^ w2
        w0 = w25 >> 0x18
        w17 = x17.w[w0 << 2]
        w0 = IH.ubfx(w6, 0x10, 8)
        w10 = x10.w[w0 << 2]
        w10 = w10 ^ w17
        w17 = IH.ubfx(w22, 8, 8)
        w17 = x30.w[w17 << 2]
        w10 = w10 ^ w17
        w17 = w24 & 0xFF
        w8 = x8.w[w17 << 2]
        w8 = w10 ^ w8
        w24 = w8 ^ w13
        w11 += 1
        x12 += 0x20

def sub_100369CD0(x0, x1, x2, x3):
    x19 = x3
    x24 = x2 >> 4
    x22 = x1
    x20 = x0
    x21 = x20 + 0x1E4
    while x24 != 0:
        x1 = sub_100369894(x21, x22)
        x0 = sub_100369264(x0, x1, x1, x25_f_path)
        x19[:len(x0)] = x0
        x19 += 0x10
        x24 -= 1
        x22 += 0x10

def loc_100368950(x0, x1, x2):
    # symbol19939$$Aweme
    w10 = 0xFF
    w2 = x2
    if w2 <= 0x20:
        # 0x100e61160
        return
    w8 = w2
    w9 = 1
    x8 = w9 << w8
    x9 = 0x0100014000
    if not IH.tst(x8, x9): # eq e.g: 0x00010000 & 0x0000000100014000 -> 0x10000 is not eq
        # 0x100e61160
        return
    w8 = w2 >> 2
    w8 = w8 & 0x3ffffffe
    w8 = w8 + 0x6
    w3 = w8

    w8 = x1.w[x1]
    w8 = IH.rev(w8)
    x0[0] = w8
    w9 = x1.w[0x4]
    w9 = IH.rev(w9)
    x0[0x4] = w9
    w9 = x1.w[0x8]
    w9 = IH.rev(w9)
    x0[0x8] = w9
    w9 = x1.w[0xC]
    w9 = IH.rev(w9)
    x0[0xC] = w9

    if w2 == 0xe:
        # 0x100e60af4
        pass
    elif w2 == 0x20:
        # 0x100e60c38
        pass
    elif w2 != 0x10:
        # 0x100e60dd0
        pass
    else:
        x9 = 0x0
        # x10_text = '''0x10adb1c50: d0 38 fe 0b 01 00 00 00 d0 3c fe 0b 01 00 00 00  �8�.....�<�.....'''
        # x10 = Mem.read_text(x10_text)
        # x14, x15 = Mem.mem_read(x10, 2, byte_size=8)
        # x12 = 0x0000000102b6c950
        # x10 = 0x0000010400040400
        # x10 = x12 & x10
        # x11 = 0x0000000001010104
        # x13 = x10 | x11
        # x16 = 0x00a060400a021040
        # x12 = IH.ORN(x16, x12)
        # x16 = 0x00a061440a061440
        # x12 = x12 & x16
        # x16 = x12 + x13
        # x13 = 0xff5f9ebbf467c694
        # x16 = x16 ^ x13
        # x14 = x14 + x16
        # x15 = x15 + x16

        #
        x14_text = '''
0x10b5f0ca0: 00 00 00 63 00 00 00 7c 00 00 00 77 00 00 00 7b  ...c...|...w...{
0x10b5f0cb0: 00 00 00 f2 00 00 00 6b 00 00 00 6f 00 00 00 c5  ...�...k...o...�
0x10b5f0cc0: 00 00 00 30 00 00 00 01 00 00 00 67 00 00 00 2b  ...0.......g...+
0x10b5f0cd0: 00 00 00 fe 00 00 00 d7 00 00 00 ab 00 00 00 76  ...�...�...�...v
0x10b5f0ce0: 00 00 00 ca 00 00 00 82 00 00 00 c9 00 00 00 7d  ...�.......�...}
0x10b5f0cf0: 00 00 00 fa 00 00 00 59 00 00 00 47 00 00 00 f0  ...�...Y...G...�
0x10b5f0d00: 00 00 00 ad 00 00 00 d4 00 00 00 a2 00 00 00 af  ...�...�...�...�
0x10b5f0d10: 00 00 00 9c 00 00 00 a4 00 00 00 72 00 00 00 c0  .......�...r...�
0x10b5f0d20: 00 00 00 b7 00 00 00 fd 00 00 00 93 00 00 00 26  ...�...�.......&
0x10b5f0d30: 00 00 00 36 00 00 00 3f 00 00 00 f7 00 00 00 cc  ...6...?...�...�
0x10b5f0d40: 00 00 00 34 00 00 00 a5 00 00 00 e5 00 00 00 f1  ...4...�...�...�
0x10b5f0d50: 00 00 00 71 00 00 00 d8 00 00 00 31 00 00 00 15  ...q...�...1....
0x10b5f0d60: 00 00 00 04 00 00 00 c7 00 00 00 23 00 00 00 c3  .......�...#...�
0x10b5f0d70: 00 00 00 18 00 00 00 96 00 00 00 05 00 00 00 9a  ................
0x10b5f0d80: 00 00 00 07 00 00 00 12 00 00 00 80 00 00 00 e2  ...............�
0x10b5f0d90: 00 00 00 eb 00 00 00 27 00 00 00 b2 00 00 00 75  ...�...'...�...u
0x10b5f0da0: 00 00 00 09 00 00 00 83 00 00 00 2c 00 00 00 1a  ...........,....
0x10b5f0db0: 00 00 00 1b 00 00 00 6e 00 00 00 5a 00 00 00 a0  .......n...Z...�
0x10b5f0dc0: 00 00 00 52 00 00 00 3b 00 00 00 d6 00 00 00 b3  ...R...;...�...�
0x10b5f0dd0: 00 00 00 29 00 00 00 e3 00 00 00 2f 00 00 00 84  ...)...�.../....
0x10b5f0de0: 00 00 00 53 00 00 00 d1 00 00 00 00 00 00 00 ed  ...S...�.......�
0x10b5f0df0: 00 00 00 20 00 00 00 fc 00 00 00 b1 00 00 00 5b  ... ...�...�...[
0x10b5f0e00: 00 00 00 6a 00 00 00 cb 00 00 00 be 00 00 00 39  ...j...�...�...9
0x10b5f0e10: 00 00 00 4a 00 00 00 4c 00 00 00 58 00 00 00 cf  ...J...L...X...�
0x10b5f0e20: 00 00 00 d0 00 00 00 ef 00 00 00 aa 00 00 00 fb  ...�...�...�...�
0x10b5f0e30: 00 00 00 43 00 00 00 4d 00 00 00 33 00 00 00 85  ...C...M...3....
0x10b5f0e40: 00 00 00 45 00 00 00 f9 00 00 00 02 00 00 00 7f  ...E...�........
0x10b5f0e50: 00 00 00 50 00 00 00 3c 00 00 00 9f 00 00 00 a8  ...P...<.......�
0x10b5f0e60: 00 00 00 51 00 00 00 a3 00 00 00 40 00 00 00 8f  ...Q...�...@....
0x10b5f0e70: 00 00 00 92 00 00 00 9d 00 00 00 38 00 00 00 f5  ...........8...�
0x10b5f0e80: 00 00 00 bc 00 00 00 b6 00 00 00 da 00 00 00 21  ...�...�...�...!
0x10b5f0e90: 00 00 00 10 00 00 00 ff 00 00 00 f3 00 00 00 d2  .......�...�...�
0x10b5f0ea0: 00 00 00 cd 00 00 00 0c 00 00 00 13 00 00 00 ec  ...�...........�
0x10b5f0eb0: 00 00 00 5f 00 00 00 97 00 00 00 44 00 00 00 17  ..._.......D....
0x10b5f0ec0: 00 00 00 c4 00 00 00 a7 00 00 00 7e 00 00 00 3d  ...�...�...~...=
0x10b5f0ed0: 00 00 00 64 00 00 00 5d 00 00 00 19 00 00 00 73  ...d...].......s
0x10b5f0ee0: 00 00 00 60 00 00 00 81 00 00 00 4f 00 00 00 dc  ...`.......O...�
0x10b5f0ef0: 00 00 00 22 00 00 00 2a 00 00 00 90 00 00 00 88  ..."...*........
0x10b5f0f00: 00 00 00 46 00 00 00 ee 00 00 00 b8 00 00 00 14  ...F...�...�....
0x10b5f0f10: 00 00 00 de 00 00 00 5e 00 00 00 0b 00 00 00 db  ...�...^.......�
0x10b5f0f20: 00 00 00 e0 00 00 00 32 00 00 00 3a 00 00 00 0a  ...�...2...:....
0x10b5f0f30: 00 00 00 49 00 00 00 06 00 00 00 24 00 00 00 5c  ...I.......$...\
0x10b5f0f40: 00 00 00 c2 00 00 00 d3 00 00 00 ac 00 00 00 62  ...�...�...�...b
0x10b5f0f50: 00 00 00 91 00 00 00 95 00 00 00 e4 00 00 00 79  ...........�...y
0x10b5f0f60: 00 00 00 e7 00 00 00 c8 00 00 00 37 00 00 00 6d  ...�...�...7...m
0x10b5f0f70: 00 00 00 8d 00 00 00 d5 00 00 00 4e 00 00 00 a9  .......�...N...�
0x10b5f0f80: 00 00 00 6c 00 00 00 56 00 00 00 f4 00 00 00 ea  ...l...V...�...�
0x10b5f0f90: 00 00 00 65 00 00 00 7a 00 00 00 ae 00 00 00 08  ...e...z...�....
0x10b5f0fa0: 00 00 00 ba 00 00 00 78 00 00 00 25 00 00 00 2e  ...�...x...%....
0x10b5f0fb0: 00 00 00 1c 00 00 00 a6 00 00 00 b4 00 00 00 c6  .......�...�...�
0x10b5f0fc0: 00 00 00 e8 00 00 00 dd 00 00 00 74 00 00 00 1f  ...�...�...t....
0x10b5f0fd0: 00 00 00 4b 00 00 00 bd 00 00 00 8b 00 00 00 8a  ...K...�........
0x10b5f0fe0: 00 00 00 70 00 00 00 3e 00 00 00 b5 00 00 00 66  ...p...>...�...f
0x10b5f0ff0: 00 00 00 48 00 00 00 03 00 00 00 f6 00 00 00 0e  ...H.......�....
0x10b5f1000: 00 00 00 61 00 00 00 35 00 00 00 57 00 00 00 b9  ...a...5...W...�
0x10b5f1010: 00 00 00 86 00 00 00 c1 00 00 00 1d 00 00 00 9e  .......�........
0x10b5f1020: 00 00 00 e1 00 00 00 f8 00 00 00 98 00 00 00 11  ...�...�........
0x10b5f1030: 00 00 00 69 00 00 00 d9 00 00 00 8e 00 00 00 94  ...i...�........
0x10b5f1040: 00 00 00 9b 00 00 00 1e 00 00 00 87 00 00 00 e9  ...............�
0x10b5f1050: 00 00 00 ce 00 00 00 55 00 00 00 28 00 00 00 df  ...�...U...(...�
0x10b5f1060: 00 00 00 8c 00 00 00 a1 00 00 00 89 00 00 00 0d  .......�........
0x10b5f1070: 00 00 00 bf 00 00 00 e6 00 00 00 42 00 00 00 68  ...�...�...B...h
0x10b5f1080: 00 00 00 41 00 00 00 99 00 00 00 2d 00 00 00 0f  ...A.......-....
0x10b5f1090: 00 00 00 b0 00 00 00 54 00 00 00 bb 00 00 00 16  ...�...T...�....
0x10b5f10a0: 00 00 63 00 00 00 7c 00 00 00 77 00 00 00 7b 00  ..c...|...w...{.
0x10b5f10b0: 00 00 f2 00 00 00 6b 00 00 00 6f 00 00 00 c5 00  ..�...k...o...�.
0x10b5f10c0: 00 00 30 00 00 00 01 00 00 00 67 00 00 00 2b 00  ..0.......g...+.
0x10b5f10d0: 00 00 fe 00 00 00 d7 00 00 00 ab 00 00 00 76 00  ..�...�...�...v.
0x10b5f10e0: 00 00 ca 00 00 00 82 00 00 00 c9 00 00 00 7d 00  ..�.......�...}.
0x10b5f10f0: 00 00 fa 00 00 00 59 00 00 00 47 00 00 00 f0 00  ..�...Y...G...�.
0x10b5f1100: 00 00 ad 00 00 00 d4 00 00 00 a2 00 00 00 af 00  ..�...�...�...�.
0x10b5f1110: 00 00 9c 00 00 00 a4 00 00 00 72 00 00 00 c0 00  ......�...r...�.
0x10b5f1120: 00 00 b7 00 00 00 fd 00 00 00 93 00 00 00 26 00  ..�...�.......&.
0x10b5f1130: 00 00 36 00 00 00 3f 00 00 00 f7 00 00 00 cc 00  ..6...?...�...�.
0x10b5f1140: 00 00 34 00 00 00 a5 00 00 00 e5 00 00 00 f1 00  ..4...�...�...�.
0x10b5f1150: 00 00 71 00 00 00 d8 00 00 00 31 00 00 00 15 00  ..q...�...1.....
0x10b5f1160: 00 00 04 00 00 00 c7 00 00 00 23 00 00 00 c3 00  ......�...#...�.
0x10b5f1170: 00 00 18 00 00 00 96 00 00 00 05 00 00 00 9a 00  ................
0x10b5f1180: 00 00 07 00 00 00 12 00 00 00 80 00 00 00 e2 00  ..............�.
0x10b5f1190: 00 00 eb 00 00 00 27 00 00 00 b2 00 00 00 75 00  ..�...'...�...u.
0x10b5f11a0: 00 00 09 00 00 00 83 00 00 00 2c 00 00 00 1a 00  ..........,.....
0x10b5f11b0: 00 00 1b 00 00 00 6e 00 00 00 5a 00 00 00 a0 00  ......n...Z...�.
0x10b5f11c0: 00 00 52 00 00 00 3b 00 00 00 d6 00 00 00 b3 00  ..R...;...�...�.
0x10b5f11d0: 00 00 29 00 00 00 e3 00 00 00 2f 00 00 00 84 00  ..)...�.../.....
0x10b5f11e0: 00 00 53 00 00 00 d1 00 00 00 00 00 00 00 ed 00  ..S...�.......�.
0x10b5f11f0: 00 00 20 00 00 00 fc 00 00 00 b1 00 00 00 5b 00  .. ...�...�...[.
0x10b5f1200: 00 00 6a 00 00 00 cb 00 00 00 be 00 00 00 39 00  ..j...�...�...9.
0x10b5f1210: 00 00 4a 00 00 00 4c 00 00 00 58 00 00 00 cf 00  ..J...L...X...�.
0x10b5f1220: 00 00 d0 00 00 00 ef 00 00 00 aa 00 00 00 fb 00  ..�...�...�...�.
0x10b5f1230: 00 00 43 00 00 00 4d 00 00 00 33 00 00 00 85 00  ..C...M...3.....
0x10b5f1240: 00 00 45 00 00 00 f9 00 00 00 02 00 00 00 7f 00  ..E...�.........
0x10b5f1250: 00 00 50 00 00 00 3c 00 00 00 9f 00 00 00 a8 00  ..P...<.......�.
0x10b5f1260: 00 00 51 00 00 00 a3 00 00 00 40 00 00 00 8f 00  ..Q...�...@.....
0x10b5f1270: 00 00 92 00 00 00 9d 00 00 00 38 00 00 00 f5 00  ..........8...�.
0x10b5f1280: 00 00 bc 00 00 00 b6 00 00 00 da 00 00 00 21 00  ..�...�...�...!.
0x10b5f1290: 00 00 10 00 00 00 ff 00 00 00 f3 00 00 00 d2 00  ......�...�...�.
0x10b5f12a0: 00 00 cd 00 00 00 0c 00 00 00 13 00 00 00 ec 00  ..�...........�.
0x10b5f12b0: 00 00 5f 00 00 00 97 00 00 00 44 00 00 00 17 00  .._.......D.....
0x10b5f12c0: 00 00 c4 00 00 00 a7 00 00 00 7e 00 00 00 3d 00  ..�...�...~...=.
0x10b5f12d0: 00 00 64 00 00 00 5d 00 00 00 19 00 00 00 73 00  ..d...].......s.
0x10b5f12e0: 00 00 60 00 00 00 81 00 00 00 4f 00 00 00 dc 00  ..`.......O...�.
0x10b5f12f0: 00 00 22 00 00 00 2a 00 00 00 90 00 00 00 88 00  .."...*.........
0x10b5f1300: 00 00 46 00 00 00 ee 00 00 00 b8 00 00 00 14 00  ..F...�...�.....
0x10b5f1310: 00 00 de 00 00 00 5e 00 00 00 0b 00 00 00 db 00  ..�...^.......�.
0x10b5f1320: 00 00 e0 00 00 00 32 00 00 00 3a 00 00 00 0a 00  ..�...2...:.....
0x10b5f1330: 00 00 49 00 00 00 06 00 00 00 24 00 00 00 5c 00  ..I.......$...\.
0x10b5f1340: 00 00 c2 00 00 00 d3 00 00 00 ac 00 00 00 62 00  ..�...�...�...b.
0x10b5f1350: 00 00 91 00 00 00 95 00 00 00 e4 00 00 00 79 00  ..........�...y.
0x10b5f1360: 00 00 e7 00 00 00 c8 00 00 00 37 00 00 00 6d 00  ..�...�...7...m.
0x10b5f1370: 00 00 8d 00 00 00 d5 00 00 00 4e 00 00 00 a9 00  ......�...N...�.
0x10b5f1380: 00 00 6c 00 00 00 56 00 00 00 f4 00 00 00 ea 00  ..l...V...�...�.
0x10b5f1390: 00 00 65 00 00 00 7a 00 00 00 ae 00 00 00 08 00  ..e...z...�.....
0x10b5f13a0: 00 00 ba 00 00 00 78 00 00 00 25 00 00 00 2e 00  ..�...x...%.....
0x10b5f13b0: 00 00 1c 00 00 00 a6 00 00 00 b4 00 00 00 c6 00  ......�...�...�.
0x10b5f13c0: 00 00 e8 00 00 00 dd 00 00 00 74 00 00 00 1f 00  ..�...�...t.....
0x10b5f13d0: 00 00 4b 00 00 00 bd 00 00 00 8b 00 00 00 8a 00  ..K...�.........
0x10b5f13e0: 00 00 70 00 00 00 3e 00 00 00 b5 00 00 00 66 00  ..p...>...�...f.
0x10b5f13f0: 00 00 48 00 00 00 03 00 00 00 f6 00 00 00 0e 00  ..H.......�.....
0x10b5f1400: 00 00 61 00 00 00 35 00 00 00 57 00 00 00 b9 00  ..a...5...W...�.
0x10b5f1410: 00 00 86 00 00 00 c1 00 00 00 1d 00 00 00 9e 00  ......�.........
0x10b5f1420: 00 00 e1 00 00 00 f8 00 00 00 98 00 00 00 11 00  ..�...�.........
0x10b5f1430: 00 00 69 00 00 00 d9 00 00 00 8e 00 00 00 94 00  ..i...�.........
0x10b5f1440: 00 00 9b 00 00 00 1e 00 00 00 87 00 00 00 e9 00  ..............�.
0x10b5f1450: 00 00 ce 00 00 00 55 00 00 00 28 00 00 00 df 00  ..�...U...(...�.
0x10b5f1460: 00 00 8c 00 00 00 a1 00 00 00 89 00 00 00 0d 00  ......�.........
0x10b5f1470: 00 00 bf 00 00 00 e6 00 00 00 42 00 00 00 68 00  ..�...�...B...h.
0x10b5f1480: 00 00 41 00 00 00 99 00 00 00 2d 00 00 00 0f 00  ..A.......-.....
0x10b5f1490: 00 00 b0 00 00 00 54 00 00 00 bb 00 00 00 16 00  ..�...T...�.....
        '''
        x14 = Mem.read_text(x14_text) # 0x100368A54
        x15 = x14 + (0x000000010b5f10a0 - 0x000000010b5f0ca0)

        x16 = x0 + 0x10

        x1 = x16.w[-4]
        x3 = IH.ubfx(x1, 0x10, 0x8)
        w3 = x14



def loc_100369990(x0, x1, x2):
    # symbol19943$$Aweme
    pass

def sub_100369A78(x0, x1, x2, x3, x4, x5, x6:int):
    # x4是长度
    x8 = x4 & 0xF
    x8 = 0x10 - x8
    x24 = x4 + x8
    if x6 > x24:
        raise RuntimeError
    x20 = x5
    x21 = x4
    x22 = x3
    x23 = x2
    sp = Mem.create(0x440 - 0x250 + 0xFF)
    loc_100368950(sp, x0, x1)
    loc_100369990(sp + (0x440 - 0x250), sp, x23)
    return sub_100369CD0(sp + (0x440 - 0x250), x22, x21, x20), x24

def loc_10036E40C(x0, x1, x2):
    x19 = x2
    x20 = x1
    x21 = x0


def sub_10036C128(x0, x1, x2):
    x23 = x2 # 前6固定
    x24 = x1
    x25 = x0
    x27 = x24 + 0x40
    x22 = Mem.create(x27)
    x20_text = '''
0x2801c91c0: af 4e c7 71 f5 41 4b 79 a8 4a 9a 4c 3e 6c 78 8c  �N�q�AKy�J.L>lx.
0x2801c91d0: 7e 38 d1 c3 35 17 c4 0f 33 d3 d2 9e 9f f4 5b 06  ~8��5.�.3��..�[.
    '''
    x20 = Mem.read_text(x20_text)
    # q系列不相等
    sp = Mem.create(0x40)
    loc_10036E40C(x25, x24, sp + 0x30)
    q0 = sp[0x20:0x30]
    q1 = sp[0x30:]
    q2 = sp[:0x10]
    q3 = sp[0x10:0x20]
    x22[:] = q1
    x22[0x10:] = q0
    x22[0x20:] = q3
    x22[0x30:] = q2
    IH.memcpy(x22 + 0x40, x25, x24)
    # 两个固定值
    x21_text = '0x280305a80: 27 f9 cc 6a 70 71 2e 87 ca db 74 f0 b0 d2 dc 04'
    x21 = Mem.read_text(x21_text) # Mem.create(0x10)
    x26_text = '0x280305540: 7c 16 25 68 0d 6e 27 12 7e fd b3 8f b0 b0 e3 7b'
    x26 = Mem.read_text(x26_text) # Mem.create(0x10)
    x23_text = '''0x15dd88740: 74 63 05 10 00 00'''
    x23[:0x6] = Mem.read_text(x23_text)
    IH.memcpy(x23 + 0x6, x20, 0x20)
    x8 = x24 + 0x50
    x6 = x8
    x5 = x23 + 0x26
    x0 = x21
    w1 = 0x10
    x2 = x26
    x3 = x22
    x4 = x27
    return sub_100369A78(x0, w1, x2, x3, x4, x5, x6)

if __name__ == '__main__':
    import os
    lldb_file_path = "simple/dy/lldb_result"
    # x0_path = os.path.join(lldb_file_path, "lldb_mem_0x16f7ee7c0.txt")
    # x1_path = os.path.join(lldb_file_path, "lldb_mem_0x16f7ee9a4.txt")
    # x0, x1 = Mem.read_file(x0_path), Mem.read_file(x1_path)
    x0_text = '''
0x16eb467c0: ba a2 70 4f ea 6b a6 fc 97 22 62 a6 68 73 0b d5  ��pO�k��."b�hs.�
0x16eb467d0: b9 e7 ff 65 53 8c 59 99 c4 ae 3b 3f ac dd 30 ea  ���eS.Y.Į;?��0�
0x16eb467e0: 3e 76 3e 63 6d fa 67 fa a9 54 5c c5 05 89 6c 2f  >v>cm�g�T\�..l/
0x16eb467f0: 2b 1d 99 37 46 e7 fe cd ef b3 a2 08 ea 3a ce 27  +..7F���ﳢ.�:�'
0x16eb46800: e7 9a 19 b4 a1 7d e7 79 4e ce 45 71 a4 f4 8b 56  �..��}�yN�Eq��.V
0x16eb46810: 56 d3 a6 99 f7 ae 41 e0 b9 60 04 91 1d 94 8f c7  VӦ.�A�`.....�
0x16eb46820: 90 77 84 ca 67 d9 c5 2a de b9 c1 bb c3 2d 4e 7c  .w.�g��*޹���-N|
0x16eb46830: 80 59 5c a5 e7 80 99 8f 39 39 58 34 fa 14 16 48  .Y\��...99X4�..H
0x16eb46840: d2 74 a6 62 35 f4 3f ed 0c cd 67 d9 f6 d9 71 91  �t�b5�?�.�g���q.
0x16eb46850: 53 36 93 da 66 c2 ac 37 6a 0f cb ee 9c d6 ba 7f  S6.�f¬7j.��.ֺ.
0x16eb46860: 81 e8 65 18 e7 2a c9 2f 8d 25 02 c1 11 f3 b8 be  .�e.�*�/.%.�.�
0x16eb46870: 9d 81 69 c5 1c 8f d2 c6 fd bf bb 02 e3 48 97 82  ..i�..���.�H..
0x16eb46880: 17 27 c6 c0 77 35 14 a3 cc 78 f8 bc 88 6c e5 ce  .'��w5.��x�.l��
0x16eb46890: d2 51 b3 dd c5 f4 06 f6 2a 71 86 97 e2 a7 88 07  �Q����.�*q..�..
0x16eb468a0: d0 78 b2 9e 6d de eb 4c 0f 60 e1 0d cd 45 32 ab  �x�.m��L.`�.�E2�
0x16eb468b0: 81 e8 65 18 e7 2a c9 2f 8d 25 02 c1 11 f3 b8 be  .�e.�*�/.%.�.�
'''
    x0 = Mem.read_text(x0_text)

    x1_text = '''
0x16eb469a4: 35 51 d6 43 ed de 11 ea 5b 90 a3 72 5a 0b 22 db  5Q�C��.�[.�rZ."�
'''
    x1 = Mem.read_text(x1_text)
    x1_v0_text = '''
0x129e995d0: 1f 8b 08 00 00 00 00 00 00 13 6d 53 4f 6f d3 30  ..........mSOo�0
    '''
    x1_v0 = Mem.read_text(x1_v0_text)
    x1 = sub_100369894(x1, x1_v0)
    print("sub_100369894:", Mem.merge_arr_to_int(x1.to_list()))
    x25_f_path = os.path.join(lldb_file_path, "lldb_mem_0x10985acc8.txt")
    # 总结：x25是固定内容
    # x25 = Mem.read_file(os.path.join(lldb_file_path, "lldb_mem_0x10cf1acc8.txt"))
    # x25_ = Mem.read_file(x25_f_path)
    # lx25 = x25.to_list()
    # lx25_ = x25_.to_list()
    # print(lx25)
    # print(lx25_)
    # lx25len = min(len(lx25), len(lx25_))
    # print(lx25_[:lx25len] == lx25[:lx25len])

    # x0至少177长度
    value = sub_100369264(x0, x1, x1, x25_f_path) # 得到 symbol19944 br x8的结果di
    vv = Mem.merge_arr_to_int(value.to_list())
    # print(value)
    print("sub_100369264:", vv)

    r_text = '''
0x16eb469a4: 73 05 de 30 46 65 c0 a2 6d 76 1e 6e 42 a7 5f e0  s.�0Fe��mv.nB�_�
'''
    rr = Mem.merge_arr_to_int(Mem.read_text(r_text).to_list()[:16])
    print(rr, vv == rr)
